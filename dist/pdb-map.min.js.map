{"version":3,"sources":["pdb-map.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","pdbMap","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"parse","fingerprint","./fingerprint","./parser",2,3,"process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","push","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","len","this","_process",4,"drainQueue","draining","currentQueue","queue","noop","nextTick","fun","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","chdir","umask",5,"b","ii","d",6,"max","ans","aux","abs",7,"sqrt","log",8,9,10,11,"p2","q2",12,"down",13,"czekanowski","./czekanowski",14,"q1",15,"dice","./dice",16,17,"squaredEuclidean","./squared-euclidean",18,19,20,21,22,23,24,"intersection","./intersection",25,"p1",26,"jaccard","./jaccard",27,28,29,"q",30,31,32,"kulczynski","./kulczynski",33,34,35,"pow",36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,"squaredChord","./squaredChord",51,52,"m",53,54,55,"euclidean","manhattan","minkowski","chebyshev","sorensen","gower","soergel","kulczynskiS","canberra","lorentzian","intersectionS","waveHedges","czekanowskiS","motyka","ruzicka","tanimoto","innerProduct","harmonicMean","cosine","kumarHassebrook","jaccardS","diceS","fidelity","bhattacharyya","hellinger","matusita","squaredChordS","pearson","neyman","squared","probabilisticSymmetric","divergence","clark","additiveSymmetric","kullbackLeibler","jeffreys","kdivergence","topsoe","jensenShannon","jensenDifference","taneja","kumarJohnson","avg","./dist/additiveSymmetric","./dist/avg","./dist/bhattacharyya","./dist/canberra","./dist/chebyshev","./dist/clark","./dist/cosine","./dist/czekanowski","./dist/czekanowskiS","./dist/dice","./dist/diceS","./dist/divergence","./dist/euclidean","./dist/fidelity","./dist/gower","./dist/harmonicMean","./dist/hellinger","./dist/innerProduct","./dist/intersection","./dist/intersectionS","./dist/jaccard","./dist/jaccardS","./dist/jeffreys","./dist/jensenDifference","./dist/jensenShannon","./dist/kdivergence","./dist/kulczynski","./dist/kulczynskiS","./dist/kullbackLeibler","./dist/kumarHassebrook","./dist/kumarJohnson","./dist/lorentzian","./dist/manhattan","./dist/matusita","./dist/minkowski","./dist/motyka","./dist/neyman","./dist/pearson","./dist/probabilisticSymmetric","./dist/ruzicka","./dist/soergel","./dist/sorensen","./dist/squared","./dist/squared-euclidean","./dist/squaredChord","./dist/squaredChordS","./dist/taneja","./dist/tanimoto","./dist/topsoe","./dist/waveHedges",56,"EigenvalueDecomposition","matrix","Matrix","checkMatrix","isSquare","j","columns","V","zeros","value","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","EigenvalueDecompositionResult","g","h","k","hh","scale","dl1","c","c2","c3","el1","s2","iter","tst1","eps","hypotenuse","low","high","nn","w","x","y","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","cdiv","xr","xi","yr","yi","LuDecomposition","v","LUrowi","LUcolj","kmax","lu","clone","rows","pivotVector","pivotSign","LuDecompositionResult","vector","sign","LU","QrDecomposition","qr","rdiag","nrm","QrDecompositionResult","QR","Rdiag","SingularValueDecomposition","options","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","swapped","transpose","console","warn","ks","cs","sn","kase","sp","spm1","epm1","sk","ek","shift","U","work","nct","nrt","pp","tmp","SingularValueDecompositionResult","CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","CholeskyDecompositionResult","L","inverse","solve","eye","leftHandSide","rightHandSide",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":45811,"endcol":23,"endline":1626,"pos":45796,"col":8,"line":1626,"value":"realEigenvalues","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":45811,"endcol":23,"endline":1626,"pos":45796,"col":8,"line":1626,"value":"realEigenvalues","type":"name"},"name":"realEigenvalues"},"realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","diagonalMatrix","X","isSingular","data","col","determinant","lowerTriangularFactor","upperTriangularFactor","pivotPermutationVector","count","subMatrixRow","isFullRank","subMatrix","orthogonalFactor","condition","norm2","rank","tol","diagonal","threshold","leftSingularVectors","rightSingularVectors","diag","Y","scols","Ls","sum","VL","mmul","vrows","urows","VLU","solveForDiagonal","vcols","ucols","leftTriangularFactor","B","other","SVD","EVD","CHO","./matrix",57,"Decompositions","DC","./decompositions",58,"MatrixError","message","nRows","nColumns","newInstance","Object","defineProperty","writable","__proto__","Asplice","Aconcat","create","constructor","from1DArray","newRows","newColumns","newData","rowVector","columnVector","empty","fill","ones","rand","jj","random","indices","stack","arg1","isMatrix","cols","current","setRow","expand","base","expansion","klass","get","checkRowIndex","checkColumnIndex","checkDimensions","otherMatrix","apply","callback","to2DArray","to1DArray","copy","isRowVector","isColumnVector","isVector","set","rowIndex","columnIndex","neg","mulS","add","addS","addM","sub","subS","subM","mul","mulM","div","divS","divM","getRow","array","removeRow","addRow","swapRows","row1","row2","temp","getColumn","column","setColumn","removeColumn","addColumn","swapColumns","column1","column2","row","checkRowVector","checkColumnVector","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","Infinity","maxIndex","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","mean","size","prod","cumulativeSum","dot","vector1","vector2","Bcolj","Arowi","sortRows","compareFunction","sort","sortColumns","startRow","endRow","startColumn","endColumn","newMatrix","subMatrixColumn","trace",59,"Atom","type","residue","coordinates","kind","Kind","lookup","./kind",60,"getFingerprint","atoms","normalizeCoordinates","eigenVectors","getEigenvectors","rotateCoordinates","nPMI","getPMI","grid","getGrid","getHistograms","avgTogc","getDensity","finalFP","normalized","finalResult","atomCount","atom","normCoordinates","normCoords","val","cov","evd","eigenValues","negative","combined","normCoord","newCoord","newCoordinates","getMaxima","atomCoord","getAtomGridPosition","atomXYZ","floor","maxima","gridSpacingXYZ","gridSize","gridSizeXYZ","gridX","gridY","gridZ","centerIndex","cog","nBoxes","getIndexFrom3d","GridBox","position","gridPosition","xGrid","yGrid","zGrid","prop","box","atomL","Result","otherBox","distance","distances","weights","frequency","getHistogram","setWeights","factor","factors","weight","minValue","maxValue","binset","getBitSet","exp","number","sorted","used","atommass","getMass","Xsq","Ysq","rsq","lowest","pos","found","getNormalizedPMI","PMI","mass","atomsets","atomtyp","substring","grids","gc","hac","dist","ml-distance","ml-matrix",61,"lookType","table","undefined","ALL","lookResidue","POSITIVE","NEGATIVE","HYDROPHOBIC","kinds","positive","hydrophobic","kindsData","lines","line","fs",62,"pdb","eleset","pass","hetatm","atm","header","hetperc","allocCODE","idCode","experiment","element","natele","alloc","ins","parseFloat","./atom"],"mappings":"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","file":"pdb-map.min.js","sourcesContent":["/**\n * pdb-map - PDB\n * @version v1.0.1\n * @link https://github.com/cheminfo/pdb-map\n * @license ISC\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.pdbMap=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar parse = require('./parser');\nvar fingerprint = require('./fingerprint');\n\nmodule.exports = {\n    parse: parse,\n    fingerprint: fingerprint\n};\n},{\"./fingerprint\":60,\"./parser\":62}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":4}],4:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],5:[function(require,module,exports){\nmodule.exports = function additiveSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i]) * (a[i] + b[i])) / (a[i] * b[i]);\n    }\n    return 2 * d;\n};\n\n},{}],6:[function(require,module,exports){\nmodule.exports = function avg(a, b) {\n    var ii = a.length,\n        max = 0,\n        ans = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        ans += aux;\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return (max + ans) / 2;\n};\n\n},{}],7:[function(require,module,exports){\nmodule.exports = function bhattacharyya(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return - Math.log(ans);\n};\n\n},{}],8:[function(require,module,exports){\nmodule.exports = function canberra(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]) / (a[i] + b[i]);\n    }\n    return ans;\n};\n\n},{}],9:[function(require,module,exports){\nmodule.exports = function chebyshev(a, b) {\n    var ii = a.length,\n        max = 0,\n        aux = 0;\n    for (var i = 0; i < ii ; i++) {\n        aux = Math.abs(a[i] - b[i]);\n        if (max < aux) {\n            max = aux;\n        }\n    }\n    return max;\n};\n\n},{}],10:[function(require,module,exports){\nmodule.exports = function clark(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.sqrt(((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i])));\n    }\n    return 2 * d;\n};\n\n},{}],11:[function(require,module,exports){\nmodule.exports = function cosine(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (Math.sqrt(p2) * Math.sqrt(q2));\n};\n\n},{}],12:[function(require,module,exports){\nmodule.exports = function czekanowski(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 1 - (2 * up / down);\n};\n\n},{}],13:[function(require,module,exports){\nvar czekanowski = require('./czekanowski');\n\nmodule.exports = function czekanowskiS(a, b) {\n    return 1 - czekanowski(a,b);\n};\n\n},{\"./czekanowski\":12}],14:[function(require,module,exports){\nmodule.exports = function dice(a, b) {\n    var ii = a.length,\n        p = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p + q1);\n};\n\n},{}],15:[function(require,module,exports){\nvar dice = require('./dice');\n\nmodule.exports = function diceS(a, b) {\n    return 1 - dice(a,b);\n};\n\n},{\"./dice\":14}],16:[function(require,module,exports){\nmodule.exports = function divergence(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / ((a[i] + b[i]) * (a[i] + b[i]));\n    }\n    return 2 * d;\n};\n\n},{}],17:[function(require,module,exports){\nvar squaredEuclidean = require('./squared-euclidean');\n\nmodule.exports = function euclidean(a, b) {\n    return Math.sqrt(squaredEuclidean(a, b));\n};\n},{\"./squared-euclidean\":47}],18:[function(require,module,exports){\nmodule.exports = function fidelity(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return ans;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function gower(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.abs(a[i] - b[i]);\n    }\n    return ans / ii;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function harmonicMean(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] * b[i]) / (a[i] + b[i]);\n    }\n    return 2 * ans;\n};\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function hellinger(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return 2 * Math.sqrt(1 - ans);\n};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = function innerProduct(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * b[i];\n    }\n    return ans;\n};\n\n},{}],23:[function(require,module,exports){\nmodule.exports = function intersection(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.min(a[i], b[i]);\n    }\n    return 1 - ans;\n};\n\n},{}],24:[function(require,module,exports){\nvar intersection = require('./intersection');\n\nmodule.exports = function intersectionS(a, b) {\n    return 1 - intersection(a,b);\n};\n\n},{\"./intersection\":23}],25:[function(require,module,exports){\nmodule.exports = function jaccard(a, b) {\n    var ii = a.length,\n        p1 = 0,\n        p2 = 0,\n        q1 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p1 += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q1 += b[i] * b[i];\n        q2 += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return q2 / (p2 + q1 - p1);\n};\n\n},{}],26:[function(require,module,exports){\nvar jaccard = require('./jaccard');\n\nmodule.exports = function jaccardS(a, b) {\n    return 1 - jaccard(a, b);\n};\n\n},{\"./jaccard\":25}],27:[function(require,module,exports){\nmodule.exports = function jeffreys(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] - b[i]) * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n\n},{}],28:[function(require,module,exports){\nmodule.exports = function jensenDifference(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += ((a[i] * Math.log(a[i]) + b[i] * Math.log(b[i])) / 2) - ((a[i] + b[i]) / 2) * Math.log((a[i] + b[i]) / 2);\n    }\n    return ans;\n};\n\n},{}],29:[function(require,module,exports){\nmodule.exports = function jensenShannon(a, b) {\n    var ii = a.length,\n        p = 0,\n        q = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n        q += b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return (p + q) / 2;\n};\n\n},{}],30:[function(require,module,exports){\nmodule.exports = function kdivergence(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n\n},{}],31:[function(require,module,exports){\nmodule.exports = function kulczynski(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.min(a[i],b[i]);\n    }\n    return up / down;\n};\n\n},{}],32:[function(require,module,exports){\nvar kulczynski = require('./kulczynski');\n\nmodule.exports = function kulczynskiS(a, b) {\n    return 1 / kulczynski(a, b);\n};\n\n},{\"./kulczynski\":31}],33:[function(require,module,exports){\nmodule.exports = function kullbackLeibler(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(a[i] / b[i]);\n    }\n    return ans;\n};\n\n},{}],34:[function(require,module,exports){\nmodule.exports = function kumarHassebrook(a, b) {\n    var ii = a.length,\n        p = 0,\n        p2 = 0,\n        q2 = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i] * b[i];\n        p2 += a[i] * a[i];\n        q2 += b[i] * b[i];\n    }\n    return p / (p2 + q2 - p);\n};\n\n},{}],35:[function(require,module,exports){\nmodule.exports = function kumarJohnson(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.pow(a[i] * a[i] - b[i] * b[i],2) / (2 * Math.pow(a[i] * b[i],1.5));\n    }\n    return ans;\n};\n\n},{}],36:[function(require,module,exports){\nmodule.exports = function lorentzian(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.log(Math.abs(a[i] - b[i]) + 1);\n    }\n    return ans;\n};\n\n},{}],37:[function(require,module,exports){\nmodule.exports = function manhattan(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.abs(a[i] - b[i]);\n    }\n    return d;\n};\n\n},{}],38:[function(require,module,exports){\nmodule.exports = function matusita(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += Math.sqrt(a[i] * b[i]);\n    }\n    return Math.sqrt(2 - 2 * ans);\n};\n\n},{}],39:[function(require,module,exports){\nmodule.exports = function minkowski(a, b, p) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += Math.pow(Math.abs(a[i] - b[i]),p);\n    }\n    return Math.pow(d,(1/p));\n};\n\n},{}],40:[function(require,module,exports){\nmodule.exports = function motyka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i], b[i]);\n        down += a[i] + b[i];\n    }\n    return 1 - (up / down);\n};\n\n},{}],41:[function(require,module,exports){\nmodule.exports = function pearson(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / a[i];\n    }\n    return d;\n};\n\n},{}],42:[function(require,module,exports){\nmodule.exports = function pearson(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / b[i];\n    }\n    return d;\n};\n\n},{}],43:[function(require,module,exports){\nmodule.exports = function probabilisticSymmetric(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return 2 * d;\n};\n\n},{}],44:[function(require,module,exports){\nmodule.exports = function ruzicka(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.min(a[i],b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n\n},{}],45:[function(require,module,exports){\nmodule.exports = function soergel(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += Math.max(a[i],b[i]);\n    }\n    return up / down;\n};\n\n},{}],46:[function(require,module,exports){\nmodule.exports = function sorensen(a, b) {\n    var ii = a.length,\n        up = 0,\n        down = 0;\n    for (var i = 0; i < ii ; i++) {\n        up += Math.abs(a[i] - b[i]);\n        down += a[i] + b[i];\n    }\n    return up / down;\n};\n\n},{}],47:[function(require,module,exports){\nmodule.exports = function squaredEuclidean(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += (a[i] - b[i]) * (a[i] - b[i]);\n    }\n    return d;\n};\n},{}],48:[function(require,module,exports){\nmodule.exports = function squared(a, b) {\n    var i = 0,\n        ii = a.length,\n        d = 0;\n    for (; i < ii; i++) {\n        d += ((a[i] - b[i]) * (a[i] - b[i])) / (a[i] + b[i]);\n    }\n    return d;\n};\n\n},{}],49:[function(require,module,exports){\nmodule.exports = function squaredChord(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (Math.sqrt(a[i]) - Math.sqrt(b[i])) * (Math.sqrt(a[i]) - Math.sqrt(b[i]));\n    }\n    return ans;\n};\n\n},{}],50:[function(require,module,exports){\nvar squaredChord = require('./squaredChord');\n\nmodule.exports = function squaredChordS(a, b) {\n    return 1 - squaredChord(a, b);\n};\n\n},{\"./squaredChord\":49}],51:[function(require,module,exports){\nmodule.exports = function taneja(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += (a[i] + b[i]) / 2 * Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n    }\n    return ans;\n};\n\n},{}],52:[function(require,module,exports){\nmodule.exports = function tanimoto(a, b) {\n    var ii = a.length,\n        p = 0,\n        q = 0,\n        m = 0;\n    for (var i = 0; i < ii ; i++) {\n        p += a[i];\n        q += b[i];\n        m += Math.min(a[i],b[i]);\n    }\n    return (p + q - 2 * m) / (p + q - m);\n};\n\n},{}],53:[function(require,module,exports){\nmodule.exports = function topsoe(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i])) + b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n    }\n    return ans;\n};\n\n},{}],54:[function(require,module,exports){\nmodule.exports = function waveHedges(a, b) {\n    var ii = a.length,\n        ans = 0;\n    for (var i = 0; i < ii ; i++) {\n        ans += 1 - (Math.min(a[i], b[i]) / Math.max(a[i], b[i]));\n    }\n    return ans;\n};\n\n},{}],55:[function(require,module,exports){\nexports.euclidean = require('./dist/euclidean');\nexports.squaredEuclidean = require('./dist/squared-euclidean');\nexports.manhattan = require('./dist/manhattan');\nexports.minkowski = require('./dist/minkowski');\nexports.chebyshev = require('./dist/chebyshev');\nexports.sorensen = require('./dist/sorensen');\nexports.gower = require('./dist/gower');\nexports.soergel = require('./dist/soergel');\nexports.kulczynski = require('./dist/kulczynski');\nexports.kulczynskiS = require('./dist/kulczynskiS');\nexports.canberra = require('./dist/canberra');\nexports.lorentzian = require('./dist/lorentzian');\nexports.intersection = require('./dist/intersection');\nexports.intersectionS = require('./dist/intersectionS');\nexports.waveHedges = require('./dist/waveHedges');\nexports.czekanowski = require('./dist/czekanowski');\nexports.czekanowskiS = require('./dist/czekanowskiS');\nexports.motyka = require('./dist/motyka');\nexports.kulczynskiS = require('./dist/kulczynskiS');\nexports.ruzicka = require('./dist/ruzicka');\nexports.tanimoto = require('./dist/tanimoto');\nexports.innerProduct = require('./dist/innerProduct');\nexports.harmonicMean = require('./dist/harmonicMean');\nexports.cosine = require('./dist/cosine');\nexports.kumarHassebrook = require('./dist/kumarHassebrook');\nexports.jaccard = require('./dist/jaccard');\nexports.jaccardS = require('./dist/jaccardS');\nexports.dice = require('./dist/dice');\nexports.diceS = require('./dist/diceS');\nexports.fidelity = require('./dist/fidelity');\nexports.bhattacharyya = require('./dist/bhattacharyya');\nexports.hellinger = require('./dist/hellinger');\nexports.matusita = require('./dist/matusita');\nexports.squaredChord = require('./dist/squaredChord');\nexports.squaredChordS = require('./dist/squaredChordS');\nexports.pearson = require('./dist/pearson');\nexports.neyman = require('./dist/neyman');\nexports.squared = require('./dist/squared');\nexports.probabilisticSymmetric = require('./dist/probabilisticSymmetric');\nexports.divergence = require('./dist/divergence');\nexports.clark = require('./dist/clark');\nexports.additiveSymmetric = require('./dist/additiveSymmetric');\nexports.kullbackLeibler = require('./dist/kullbackLeibler');\nexports.jeffreys = require('./dist/jeffreys');\nexports.kdivergence = require('./dist/kdivergence');\nexports.topsoe = require('./dist/topsoe');\nexports.jensenShannon = require('./dist/jensenShannon');\nexports.jensenDifference = require('./dist/jensenDifference');\nexports.taneja = require('./dist/taneja');\nexports.kumarJohnson = require('./dist/kumarJohnson');\nexports.avg = require('./dist/avg');\n\n},{\"./dist/additiveSymmetric\":5,\"./dist/avg\":6,\"./dist/bhattacharyya\":7,\"./dist/canberra\":8,\"./dist/chebyshev\":9,\"./dist/clark\":10,\"./dist/cosine\":11,\"./dist/czekanowski\":12,\"./dist/czekanowskiS\":13,\"./dist/dice\":14,\"./dist/diceS\":15,\"./dist/divergence\":16,\"./dist/euclidean\":17,\"./dist/fidelity\":18,\"./dist/gower\":19,\"./dist/harmonicMean\":20,\"./dist/hellinger\":21,\"./dist/innerProduct\":22,\"./dist/intersection\":23,\"./dist/intersectionS\":24,\"./dist/jaccard\":25,\"./dist/jaccardS\":26,\"./dist/jeffreys\":27,\"./dist/jensenDifference\":28,\"./dist/jensenShannon\":29,\"./dist/kdivergence\":30,\"./dist/kulczynski\":31,\"./dist/kulczynskiS\":32,\"./dist/kullbackLeibler\":33,\"./dist/kumarHassebrook\":34,\"./dist/kumarJohnson\":35,\"./dist/lorentzian\":36,\"./dist/manhattan\":37,\"./dist/matusita\":38,\"./dist/minkowski\":39,\"./dist/motyka\":40,\"./dist/neyman\":41,\"./dist/pearson\":42,\"./dist/probabilisticSymmetric\":43,\"./dist/ruzicka\":44,\"./dist/soergel\":45,\"./dist/sorensen\":46,\"./dist/squared\":48,\"./dist/squared-euclidean\":47,\"./dist/squaredChord\":49,\"./dist/squaredChordS\":50,\"./dist/taneja\":51,\"./dist/tanimoto\":52,\"./dist/topsoe\":53,\"./dist/waveHedges\":54}],56:[function(require,module,exports){\n'use strict';\n\nvar Matrix = require('./matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = Matrix.zeros(n, n),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    if (matrix.isSymmetric()) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value[i][j];\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    }\n    else {\n        var H = Matrix.zeros(n, n),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value[i][j];\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    return new EigenvalueDecompositionResult(n, e, d, V);\n}\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    }\n    else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nfunction EigenvalueDecompositionResult(n, e, d, V) {\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecompositionResult.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            }\n            else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    return new LuDecompositionResult(lu, pivotVector, pivotSign);\n\n}\n\nfunction LuDecompositionResult(lu, vector, sign) {\n    this.LU = lu;\n    this.pivotVector = vector;\n    this.pivotSign = sign;\n}\n\nLuDecompositionResult.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare())\n            throw new Error('Matrix must be square');\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++)\n            determinant *= data[j][j];\n        return determinant;\n    },\n    get lowerTriangularFactor() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularFactor() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows)\n            throw new Error('Invalid matrix dimensions');\n        if (this.isSingular())\n            throw new Error('LU matrix is singular');\n\n        var count = value.columns,\n            X = value.subMatrixRow(this.pivotVector, 0, count - 1),\n            columns = lu.columns,\n            i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    value = Matrix.checkMatrix(value)\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    return new QrDecompositionResult(qr, rdiag);\n}\n\nfunction QrDecompositionResult(qr, rdiag) {\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecompositionResult.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m)\n            throw new Error('Matrix row dimensions must agree');\n        if (!this.isFullRank())\n            throw new Error('Matrix is rank deficient');\n\n        var count = value.columns,\n            X = value.clone(),\n            n = qr.columns,\n            i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularFactor() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalFactor() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    value = Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var a = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false)\n        wantu = false;\n    if (options.computeRightSingularVectors === false)\n        wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    if (m < n) {\n        if (!autoTranspose) {\n            console.warn('WARNING: Computing SVD on a matrix with more columns than rows.');\n        } else {\n            a = a.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = Matrix.zeros(m, nu),\n        V = Matrix.zeros(n, n),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0)\n                    e[k] = -e[k];\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    return new SingularValueDecompositionResult(m, n, s, U, V);\n}\n\nfunction SingularValueDecompositionResult(m, n, s, U, V) {\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecompositionResult.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        return this.U;\n    },\n    get rightSingularVectors() {\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            }\n            else Ls[i][i] = 1 / this.s[i];\n        }\n\n\n        var VL = this.V.mmul(Ls),\n            vrows = this.V.rows,\n            urows = this.U.rows,\n            VLU = Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * this.U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.diag(value));\n    },\n    inverse: function () {\n        var e = this.threshold,\n            vrows = this.V.rows,\n            vcols = this.V.columns,\n            X = new Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = this.V[i][j] / this.s[j];\n                }\n            }\n        }\n\n        var urows = this.U.rows,\n            ucols = this.U.columns,\n            Y = new Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * this.U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric())\n        throw new Error('Matrix is not symmetric');\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    return new CholeskyDecompositionResult(l);\n}\n\nfunction CholeskyDecompositionResult(l) {\n    this.L = l;\n}\n\nCholeskyDecompositionResult.prototype = {\n    get leftTriangularFactor() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nfunction hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n}\n\nfunction inverse(matrix) {\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\nMatrix.prototype.inverse = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n\n},{\"./matrix\":58}],57:[function(require,module,exports){\n'use strict';\n\nmodule.exports = require('./matrix');\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n},{\"./decompositions\":56,\"./matrix\":58}],58:[function(require,module,exports){\n'use strict';\n\nvar Asplice = Array.prototype.splice,\n    Aconcat = Array.prototype.concat;\n\n// For performance : http://jsperf.com/clone-array-slice-vs-while-vs-for\nfunction slice(arr) {\n    var i = 0,\n        ii = arr.length,\n        result = new Array(ii);\n    for (; i < ii; i++) {\n        result[i] = arr[i];\n    }\n    return result;\n}\n\nfunction MatrixError(message) {\n    this.message = message || 'Unknown matrix error';\n}\nMatrixError.prototype = Object.create(Error.prototype);\nMatrixError.prototype.name = 'MatrixError';\nMatrixError.prototype.constructor = MatrixError;\n\n/**\n * Real matrix.\n * @constructor\n * @param {number|Array} nRows - Number of rows of the new matrix or a 2D array containing the data.\n * @param {number|boolean} [nColumns] - Number of columns of the new matrix or a boolean specifying if the input array should be cloned\n */\nfunction Matrix(nRows, nColumns) {\n    var i = 0, rows, columns, matrix, newInstance;\n    if (nRows instanceof Array) {\n        newInstance = nColumns;\n        matrix = newInstance ? slice(nRows) : nRows;\n        nRows = matrix.length;\n        nColumns = matrix[0].length;\n        if (typeof nColumns === 'undefined') {\n            throw new MatrixError('Data must be a 2D array');\n        }\n        if (nRows > 0 && nColumns > 0) {\n            for (; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new MatrixError('Inconsistent array dimensions');\n                } else if (newInstance) {\n                    matrix[i] = slice(matrix[i]);\n                }\n            }\n        } else {\n            throw new MatrixError('Invalid dimensions: ' + nRows + 'x' + nColumns);\n        }\n    } else if (typeof nRows === 'number') { // Create empty matrix\n        if (nRows > 0 && nColumns > 0) {\n            matrix = new Array(nRows);\n            for (; i < nRows; i++) {\n                matrix[i] = new Array(nColumns);\n            }\n        } else {\n            throw new MatrixError('Invalid dimensions: ' + nRows + 'x' + nColumns);\n        }\n    } else {\n        throw new MatrixError('Invalid arguments')\n    }\n\n    Object.defineProperty(matrix, 'rows', {writable: true, value: nRows});\n    Object.defineProperty(matrix, 'columns', {writable: true, value: nColumns});\n\n    matrix.__proto__ = Matrix.prototype;\n\n    return matrix;\n}\n\n/**\n * Constructs a Matrix with the chosen dimensions from a 1D array.\n * @param {number} newRows - Number of rows\n * @param {number} newColumns - Number of columns\n * @param {Array} newData - A 1D array containing data for the matrix\n * @returns {Matrix} - The new matrix\n */\nMatrix.from1DArray = function from1DArray(newRows, newColumns, newData) {\n    var length, data, i = 0;\n\n    length = newRows * newColumns;\n    if (length !== newData.length)\n        throw new MatrixError('Data length does not match given dimensions');\n\n    data = new Array(newRows);\n    for (; i < newRows; i++) {\n        data[i] = newData.slice(i * newColumns, (i + 1) * newColumns);\n    }\n    return new Matrix(data);\n};\n\n/**\n * Creates a row vector, a matrix with only one row.\n * @param {Array} newData - A 1D array containing data for the vector\n * @returns {Matrix} - The new matrix\n */\nMatrix.rowVector = function rowVector(newData) {\n    return new Matrix([newData]);\n};\n\n/**\n * Creates a column vector, a matrix with only one column.\n * @param {Array} newData - A 1D array containing data for the vector\n * @returns {Matrix} - The new matrix\n */\nMatrix.columnVector = function columnVector(newData) {\n    var l = newData.length, vector = new Array(l);\n    for (var i = 0; i < l; i++)\n        vector[i] = [newData[i]];\n    return new Matrix(vector);\n};\n\n/**\n * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n * @param {number} rows - Number of rows\n * @param {number} columns - Number of columns\n * @returns {Matrix} - The new matrix\n */\nMatrix.empty = function empty(rows, columns) {\n    return new Matrix(rows, columns);\n};\n\n/**\n * Creates a matrix with the given dimensions. Values will be set to zero.\n * @param {number} rows - Number of rows\n * @param {number} columns - Number of columns\n * @returns {Matrix} - The new matrix\n */\nMatrix.zeros = function zeros(rows, columns) {\n    return Matrix.empty(rows, columns).fill(0);\n};\n\n/**\n * Creates a matrix with the given dimensions. Values will be set to one.\n * @param {number} rows - Number of rows\n * @param {number} columns - Number of columns\n * @returns {Matrix} - The new matrix\n */\nMatrix.ones = function ones(rows, columns) {\n    return Matrix.empty(rows, columns).fill(1);\n};\n\n/**\n * Creates a matrix with the given dimensions. Values will be randomly set using Math.random().\n * @param {number} rows - Number of rows\n * @param {number} columns - Number of columns\n * @returns {Matrix} The new matrix\n */\nMatrix.rand = function rand(rows, columns) {\n    var matrix = Matrix.empty(rows, columns);\n    for (var i = 0, ii = matrix.rows; i < ii; i++) {\n        for (var j = 0, jj = matrix.columns; j < jj; j++) {\n            matrix[i][j] = Math.random();\n        }\n    }\n    return matrix;\n};\n\n/**\n * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and other will be 0.\n * @param {number} n - Number of rows and columns\n * @returns {Matrix} - The new matrix\n */\nMatrix.eye = function eye(n) {\n    var matrix = Matrix.zeros(n, n), l = matrix.rows;\n    for (var i = 0; i < l; i++) {\n        matrix[i][i] = 1;\n    }\n    return matrix;\n};\n\n/**\n * Creates a diagonal matrix based on the given array.\n * @param {Array} data - Array containing the data for the diagonal\n * @returns {Matrix} - The new matrix\n */\nMatrix.diag = function diag(data) {\n    var l = data.length, matrix = Matrix.zeros(l, l);\n    for (var i = 0; i < l; i++) {\n        matrix[i][i] = data[i];\n    }\n    return matrix;\n};\n\n/**\n * Creates an array of indices between two values\n * @param {number} from\n * @param {number} to\n * @returns {Array}\n */\nMatrix.indices = function indices(from, to) {\n    var vector = new Array(to - from);\n    for (var i = 0; i < vector.length; i++)\n        vector[i] = from++;\n    return vector;\n};\n\n// TODO DOC\nMatrix.stack = function stack(arg1) {\n    var i, j, k;\n    if (Matrix.isMatrix(arg1)) {\n        var rows = 0,\n            cols = 0;\n        for (i = 0; i < arguments.length; i++) {\n            rows += arguments[i].rows;\n            if (arguments[i].columns > cols)\n                cols = arguments[i].columns;\n        }\n\n        var r = Matrix.zeros(rows, cols);\n        var c = 0;\n        for (i = 0; i < arguments.length; i++) {\n            var current = arguments[i];\n            for (j = 0; j < current.rows; j++) {\n                for (k = 0; k < current.columns; k++)\n                    r[c][k] = current[j][k];\n                c++;\n            }\n        }\n        return r;\n    }\n    else if (arg1 instanceof Array) {\n        var matrix = Matrix.empty(arguments.length, arg1.length);\n        for (i = 0; i < arguments.length; i++)\n            matrix.setRow(i, arguments[i]);\n        return matrix;\n    }\n};\n\n// TODO DOC\nMatrix.expand = function expand(base, count) {\n    var expansion = [];\n    for (var i = 0; i < count.length; i++)\n        for (var j = 0; j < count[i]; j++)\n            expansion.push(base[i]);\n    return new Matrix(expansion);\n};\n\n/**\n * Check that the provided value is a Matrix and tries to instantiate one if not\n * @param value - The value to check\n * @returns {Matrix}\n * @throws {MatrixError}\n */\nMatrix.checkMatrix = function checkMatrix(value) {\n    if (!value) {\n        throw new MatrixError('Argument has to be a matrix');\n    }\n    if (value.klass !== 'Matrix') {\n        value = new Matrix(value);\n    }\n    return value;\n};\n\n/**\n * Returns true if the argument is a Matrix, false otherwise\n * @param value - The value to check\n * @returns {boolean}\n */\nMatrix.isMatrix = function isMatrix(value) {\n    return value ? value.klass === 'Matrix' : false;\n};\n\n/**\n * @property {string} - The name of this class.\n */\nObject.defineProperty(Matrix.prototype, 'klass', {\n    get: function klass() {\n        return 'Matrix';\n    }\n});\n\n/**\n * @property {number} - The number of elements in the matrix.\n */\nObject.defineProperty(Matrix.prototype, 'size', {\n    get: function size() {\n        return this.rows * this.columns;\n    }\n});\n\n/**\n * @private\n * Internal check that a row index is not out of bounds\n * @param {number} index\n */\nMatrix.prototype.checkRowIndex = function checkRowIndex(index) {\n    if (index < 0 || index > this.rows - 1)\n        throw new MatrixError('Row index out of range.');\n};\n\n/**\n * @private\n * Internal check that a column index is not out of bounds\n * @param {number} index\n */\nMatrix.prototype.checkColumnIndex = function checkColumnIndex(index) {\n    if (index < 0 || index > this.columns - 1)\n        throw new MatrixError('Column index out of range.');\n};\n\n/**\n * @private\n * Internal check that two matrices have the same dimensions\n * @param {Matrix} otherMatrix\n */\nMatrix.prototype.checkDimensions = function checkDimensions(otherMatrix) {\n    if ((this.rows !== otherMatrix.rows) || (this.columns !== otherMatrix.columns))\n        throw new MatrixError('Matrices dimensions must be equal.');\n};\n\n/**\n * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n * @returns {Matrix} this\n */\nMatrix.prototype.apply = function apply(callback) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            callback.call(this, i, j);\n        }\n    }\n    return this;\n};\n\n/**\n * Creates an exact and independent copy of the matrix\n * @returns {Matrix}\n */\nMatrix.prototype.clone = function clone() {\n    return new Matrix(this.to2DArray());\n};\n\n/**\n * Returns a new 1D array filled row by row with the matrix values\n * @returns {Array}\n */\nMatrix.prototype.to1DArray = function to1DArray() {\n    return Aconcat.apply([], this);\n};\n\n/**\n * Returns a 2D array containing a copy of the data\n * @returns {Array}\n */\nMatrix.prototype.to2DArray = function to2DArray() {\n    var l = this.rows, copy = new Array(l);\n    for (var i = 0; i < l; i++) {\n        copy[i] = slice(this[i]);\n    }\n    return copy;\n};\n\n/**\n * @returns {boolean} true if the matrix has one row\n */\nMatrix.prototype.isRowVector = function isRowVector() {\n    return this.rows === 1;\n};\n\n/**\n * @returns {boolean} true if the matrix has one column\n */\nMatrix.prototype.isColumnVector = function isColumnVector() {\n    return this.columns === 1;\n};\n\n/**\n * @returns {boolean} true if the matrix has one row or one column\n */\nMatrix.prototype.isVector = function isVector() {\n    return (this.rows === 1) || (this.columns === 1);\n};\n\n/**\n * @returns {boolean} true if the matrix has the same number of rows and columns\n */\nMatrix.prototype.isSquare = function isSquare() {\n    return this.rows === this.columns;\n};\n\n/**\n * @returns {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n */\nMatrix.prototype.isSymmetric = function isSymmetric() {\n    if (this.isSquare()) {\n        var l = this.rows;\n        for (var i = 0; i < l; i++) {\n            for (var j = 0; j <= i; j++) {\n                if (this[i][j] !== this[j][i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n * @param {number} rowIndex - Index of the row\n * @param {number} columnIndex - Index of the column\n * @param {number} value - The new value for the element\n * @returns {Matrix} this\n */\nMatrix.prototype.set = function set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n};\n\n/**\n * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n * @param {number} rowIndex - Index of the row\n * @param {number} columnIndex - Index of the column\n * @returns {number}\n */\nMatrix.prototype.get = function get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n};\n\n/**\n * Fills the matrix with a given value. All elements will be set to this value.\n * @param {number} value - New value\n * @returns {Matrix} this\n */\nMatrix.prototype.fill = function fill(value) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] = value;\n        }\n    }\n    return this;\n};\n\n/**\n * Negates the matrix. All elements will be multiplied by (-1)\n * @returns {Matrix} this\n */\nMatrix.prototype.neg = function neg() {\n    return this.mulS(-1);\n};\n\n/**\n * Adds a scalar or values from another matrix (in place)\n * @param {number|Matrix} value\n * @returns {Matrix} this\n */\nMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number')\n        return this.addS(value);\n    value = Matrix.checkMatrix(value);\n        return this.addM(value);\n};\n\n/**\n * Adds a scalar to each element of the matrix\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.addS = function addS(value) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] += value;\n        }\n    }\n    return this;\n};\n\n/**\n * Adds the value of each element of matrix to the corresponding element of this\n * @param {Matrix} matrix\n * @returns {Matrix} this\n */\nMatrix.prototype.addM = function addM(matrix) {\n    this.checkDimensions(matrix);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] += matrix[i][j];\n        }\n    }\n    return this;\n};\n\n/**\n * Subtracts a scalar or values from another matrix (in place)\n * @param {number|Matrix} value\n * @returns {Matrix} this\n */\nMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number')\n        return this.subS(value);\n    value = Matrix.checkMatrix(value);\n        return this.subM(value);\n};\n\n/**\n * Subtracts a scalar from each element of the matrix\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.subS = function subS(value) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] -= value;\n        }\n    }\n    return this;\n};\n\n/**\n * Subtracts the value of each element of matrix from the corresponding element of this\n * @param {Matrix} matrix\n * @returns {Matrix} this\n */\nMatrix.prototype.subM = function subM(matrix) {\n    this.checkDimensions(matrix);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] -= matrix[i][j];\n        }\n    }\n    return this;\n};\n\n/**\n * Multiplies a scalar or values from another matrix (in place)\n * @param {number|Matrix} value\n * @returns {Matrix} this\n */\nMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number')\n        return this.mulS(value);\n    value = Matrix.checkMatrix(value);\n        return this.mulM(value);\n};\n\n/**\n * Multiplies a scalar with each element of the matrix\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.mulS = function mulS(value) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] *= value;\n        }\n    }\n    return this;\n};\n\n/**\n * Multiplies the value of each element of matrix with the corresponding element of this\n * @param {Matrix} matrix\n * @returns {Matrix} this\n */\nMatrix.prototype.mulM = function mulM(matrix) {\n    this.checkDimensions(matrix);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] *= matrix[i][j];\n        }\n    }\n    return this;\n};\n\n/**\n * Divides by a scalar or values from another matrix (in place)\n * @param {number|Matrix} value\n * @returns {Matrix} this\n */\nMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number')\n        return this.divS(value);\n    value = Matrix.checkMatrix(value);\n        return this.divM(value);\n};\n\n/**\n * Divides each element of the matrix by a scalar\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.divS = function divS(value) {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] /= value;\n        }\n    }\n    return this;\n};\n\n/**\n * Divides each element of this by the corresponding element of matrix\n * @param {Matrix} matrix\n * @returns {Matrix} this\n */\nMatrix.prototype.divM = function divM(matrix) {\n    this.checkDimensions(matrix);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] /= matrix[i][j];\n        }\n    }\n    return this;\n};\n\n/**\n * Returns a new array from the given row index\n * @param {number} index - Row index\n * @returns {Array}\n */\nMatrix.prototype.getRow = function getRow(index) {\n    this.checkRowIndex(index);\n    return slice(this[index]);\n};\n\n/**\n * Sets a row at the given index\n * @param {number} index - Row index\n * @param {Array|Matrix} array - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.setRow = function setRow(index, array) {\n    this.checkRowIndex(index);\n    if (Matrix.isMatrix(array)) array = array.to1DArray();\n    if (array.length !== this.columns)\n        throw new MatrixError('Invalid row size');\n    this[index] = slice(array);\n    return this;\n};\n\n/**\n * Removes a row from the given index\n * @param {number} index - Row index\n * @returns {Matrix} this\n */\nMatrix.prototype.removeRow = function removeRow(index) {\n    this.checkRowIndex(index);\n    if (this.rows === 1)\n        throw new MatrixError('A matrix cannot have less than one row');\n    Asplice.call(this, index, 1);\n    this.rows -= 1;\n    return this;\n};\n\n/**\n * Adds a row at the given index\n * @param {number} [index = this.rows] - Row index\n * @param {Array|Matrix} array - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.addRow = function addRow(index, array) {\n    if (typeof array === 'undefined') {\n        array = index;\n        index = this.rows;\n    }\n    if (index < 0 || index > this.rows)\n        throw new MatrixError('Row index out of range.');\n    if (Matrix.isMatrix(array)) array = array.to1DArray();\n    if (array.length !== this.columns)\n        throw new MatrixError('Invalid row size');\n    Asplice.call(this, index, 0, slice(array));\n    this.rows += 1;\n    return this;\n};\n\n/**\n * Swaps two rows\n * @param {number} row1 - First row index\n * @param {number} row2 - Second row index\n * @returns {Matrix} this\n */\nMatrix.prototype.swapRows = function swapRows(row1, row2) {\n    this.checkRowIndex(row1);\n    this.checkRowIndex(row2);\n    var temp = this[row1];\n    this[row1] = this[row2];\n    this[row2] = temp;\n    return this;\n};\n\n/**\n * Returns a new array from the given column index\n * @param {number} index - Column index\n * @returns {Array}\n */\nMatrix.prototype.getColumn = function getColumn(index) {\n    this.checkColumnIndex(index);\n    var l = this.rows, column = new Array(l);\n    for (var i = 0; i < l; i++) {\n        column[i] = this[i][index];\n    }\n    return column;\n};\n\n/**\n * Sets a column at the given index\n * @param {number} index - Column index\n * @param {Array|Matrix} array - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.setColumn = function setColumn(index, array) {\n    this.checkColumnIndex(index);\n    if (Matrix.isMatrix(array)) array = array.to1DArray();\n    var l = this.rows;\n    if (array.length !== l)\n        throw new MatrixError('Invalid column size');\n    for (var i = 0; i < l; i++) {\n        this[i][index] = array[i];\n    }\n    return this;\n};\n\n/**\n * Removes a column from the given index\n * @param {number} index - Column index\n * @returns {Matrix} this\n */\nMatrix.prototype.removeColumn = function removeColumn(index) {\n    this.checkColumnIndex(index);\n    if (this.columns === 1)\n        throw new MatrixError('A matrix cannot have less than one column');\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n};\n\n/**\n * Adds a column at the given index\n * @param {number} [index = this.columns] - Column index\n * @param {Array|Matrix} array - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.addColumn = function addColumn(index, array) {\n    if (typeof array === 'undefined') {\n        array = index;\n        index = this.columns;\n    }\n    if (index < 0 || index > this.columns)\n        throw new MatrixError('Column index out of range.');\n    if (Matrix.isMatrix(array)) array = array.to1DArray();\n    var l = this.rows;\n    if (array.length !== l)\n        throw new MatrixError('Invalid column size');\n    for (var i = 0; i < l; i++) {\n        this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n};\n\n/**\n * Swaps two columns\n * @param {number} column1 - First column index\n * @param {number} column2 - Second column index\n * @returns {Matrix} this\n */\nMatrix.prototype.swapColumns = function swapColumns(column1, column2) {\n    this.checkRowIndex(column1);\n    this.checkRowIndex(column2);\n    var l = this.rows, temp, row;\n    for (var i = 0; i < l; i++) {\n        row = this[i];\n        temp = row[column1];\n        row[column1] = row[column2];\n        row[column2] = temp;\n    }\n    return this;\n};\n\n/**\n * @private\n * Internal check that the provided vector is an array with the right length\n * @param {Array|Matrix} vector\n * @returns {Array}\n * @throws {MatrixError}\n */\nMatrix.prototype.checkRowVector = function checkRowVector(vector) {\n    if (Matrix.isMatrix(vector))\n        vector = vector.to1DArray();\n    if (vector.length !== this.columns)\n        throw new MatrixError('vector size must be the same as the number of columns');\n    return vector;\n};\n\n/**\n * @private\n * Internal check that the provided vector is an array with the right length\n * @param {Array|Matrix} vector\n * @returns {Array}\n * @throws {MatrixError}\n */\nMatrix.prototype.checkColumnVector = function checkColumnVector(vector) {\n    if (Matrix.isMatrix(vector))\n        vector = vector.to1DArray();\n    if (vector.length !== this.rows)\n        throw new MatrixError('vector size must be the same as the number of rows');\n    return vector;\n};\n\n/**\n * Adds the values of a vector to each row\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.addRowVector = function addRowVector(vector) {\n    vector = this.checkRowVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] += vector[j];\n        }\n    }\n    return this;\n};\n\n/**\n * Subtracts the values of a vector from each row\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.subRowVector = function subRowVector(vector) {\n    vector = this.checkRowVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] -= vector[j];\n        }\n    }\n    return this;\n};\n\n/**\n * Multiplies the values of a vector with each row\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.mulRowVector = function mulRowVector(vector) {\n    vector = this.checkRowVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] *= vector[j];\n        }\n    }\n    return this;\n};\n\n/**\n * Divides the values of each row by those of a vector\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.divRowVector = function divRowVector(vector) {\n    vector = this.checkRowVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] /= vector[j];\n        }\n    }\n    return this;\n};\n\n/**\n * Adds the values of a vector to each column\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.addColumnVector = function addColumnVector(vector) {\n    vector = this.checkColumnVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] += vector[i];\n        }\n    }\n    return this;\n};\n\n/**\n * Subtracts the values of a vector from each column\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.subColumnVector = function subColumnVector(vector) {\n    vector = this.checkColumnVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] -= vector[i];\n        }\n    }\n    return this;\n};\n\n/**\n * Multiplies the values of a vector with each column\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.mulColumnVector = function mulColumnVector(vector) {\n    vector = this.checkColumnVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] *= vector[i];\n        }\n    }\n    return this;\n};\n\n/**\n * Divides the values of each column by those of a vector\n * @param {Array|Matrix} vector - Array or vector\n * @returns {Matrix} this\n */\nMatrix.prototype.divColumnVector = function divColumnVector(vector) {\n    vector = this.checkColumnVector(vector);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] /= vector[i];\n        }\n    }\n    return this;\n};\n\n/**\n * Multiplies the values of a row with a scalar\n * @param {number} index - Row index\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.mulRow = function mulRow(index, value) {\n    this.checkRowIndex(index);\n    var i = 0, l = this.columns;\n    for (; i < l; i++) {\n        this[index][i] *= value;\n    }\n    return this;\n};\n\n/**\n * Multiplies the values of a column with a scalar\n * @param {number} index - Column index\n * @param {number} value\n * @returns {Matrix} this\n */\nMatrix.prototype.mulColumn = function mulColumn(index, value) {\n    this.checkColumnIndex(index);\n    var i = 0, l = this.rows;\n    for (; i < l; i++) {\n        this[i][index] *= value;\n    }\n};\n\n/**\n * A matrix index\n * @typedef {Object} MatrixIndex\n * @property {number} row\n * @property {number} column\n */\n\n/**\n * Returns the maximum value of the matrix\n * @returns {number}\n */\nMatrix.prototype.max = function max() {\n    var v = -Infinity;\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (this[i][j] > v) {\n                v = this[i][j];\n            }\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the maximum value\n * @returns {MatrixIndex}\n */\nMatrix.prototype.maxIndex = function maxIndex() {\n    var v = -Infinity;\n    var idx = {};\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (this[i][j] > v) {\n                v = this[i][j];\n                idx.row = i;\n                idx.column = j;\n            }\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns the minimum value of the matrix\n * @returns {number}\n */\nMatrix.prototype.min = function min() {\n    var v = Infinity;\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (this[i][j] < v) {\n                v = this[i][j];\n            }\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the minimum value\n * @returns {MatrixIndex}\n */\nMatrix.prototype.minIndex = function minIndex() {\n    var v = Infinity;\n    var idx = {};\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (this[i][j] < v) {\n                v = this[i][j];\n                idx.row = i;\n                idx.column = j;\n            }\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns the maximum value of one row\n * @param {number} index - Row index\n * @returns {number}\n */\nMatrix.prototype.maxRow = function maxRow(index) {\n    this.checkRowIndex(index);\n    var v = -Infinity;\n    for (var i = 0, ii = this.columns; i < ii; i++) {\n        if (this[index][i] > v) {\n            v = this[index][i];\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the maximum value of one row\n * @param {number} index - Row index\n * @returns {MatrixIndex}\n */\nMatrix.prototype.maxRowIndex = function maxRowIndex(index) {\n    this.checkRowIndex(index);\n    var v = -Infinity;\n    var idx = {\n            row: index\n        };\n    for (var i = 0, ii = this.columns; i < ii; i++) {\n        if (this[index][i] > v) {\n            v = this[index][i];\n            idx.column = i;\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns the minimum value of one row\n * @param {number} index - Row index\n * @returns {number}\n */\nMatrix.prototype.minRow = function minRow(index) {\n    this.checkRowIndex(index);\n    var v = Infinity;\n    for (var i = 0, ii = this.columns; i < ii; i++) {\n        if (this[index][i] < v) {\n            v = this[index][i];\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the maximum value of one row\n * @param {number} index - Row index\n * @returns {MatrixIndex}\n */\nMatrix.prototype.minRowIndex = function minRowIndex(index) {\n    this.checkRowIndex(index);\n    var v = Infinity;\n    var idx = {\n        row: index,\n        column: 0\n    };\n    for (var i = 0, ii = this.columns; i < ii; i++) {\n        if (this[index][i] < v) {\n            v = this[index][i];\n            idx.column = i;\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns the maximum value of one column\n * @param {number} index - Column index\n * @returns {number}\n */\nMatrix.prototype.maxColumn = function maxColumn(index) {\n    this.checkColumnIndex(index);\n    var v = -Infinity;\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        if (this[i][index] > v) {\n            v = this[i][index];\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the maximum value of one column\n * @param {number} index - Column index\n * @returns {MatrixIndex}\n */\nMatrix.prototype.maxColumnIndex = function maxColumnIndex(index) {\n    this.checkColumnIndex(index);\n    var v = -Infinity;\n    var idx = {\n        row: 0,\n        column: index\n    };\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        if (this[i][index] > v) {\n            v = this[i][index];\n            idx.row = i;\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns the minimum value of one column\n * @param {number} index - Column index\n * @returns {number}\n */\nMatrix.prototype.minColumn = function minColumn(index) {\n    this.checkColumnIndex(index);\n    var v = Infinity;\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        if (this[i][index] < v) {\n            v = this[i][index];\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the index of the minimum value of one column\n * @param {number} index - Column index\n * @returns {MatrixIndex}\n */\nMatrix.prototype.minColumnIndex = function minColumnIndex(index) {\n    this.checkColumnIndex(index);\n    var v = Infinity;\n    var idx = {\n        row: 0,\n        column: index\n    };\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        if (this[i][index] < v) {\n            v = this[i][index];\n            idx.row = i;\n        }\n    }\n    return idx;\n};\n\n/**\n * Returns an array containing the diagonal values of the matrix\n * @returns {Array}\n */\nMatrix.prototype.diag = function diag() {\n    if (!this.isSquare())\n        throw new MatrixError('Only square matrices have a diagonal.');\n    var diag = new Array(this.rows);\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        diag[i] = this[i][i];\n    }\n    return diag;\n};\n\n/**\n * Returns the sum of all elements of the matrix\n * @returns {number}\n */\nMatrix.prototype.sum = function sum() {\n    var v = 0;\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            v += this[i][j];\n        }\n    }\n    return v;\n};\n\n/**\n * Returns the mean of all elements of the matrix\n * @returns {number}\n */\nMatrix.prototype.mean = function mean() {\n    return this.sum() / this.size;\n};\n\n/**\n * Returns the product of all elements of the matrix\n * @returns {number}\n */\nMatrix.prototype.prod = function prod() {\n    var prod = 1;\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            prod *= this[i][j];\n        }\n    }\n    return prod;\n};\n\n/**\n * Computes the cumulative sum of the matrix elements (in place, row by row)\n * @returns {Matrix} this\n */\nMatrix.prototype.cumulativeSum = function cumulativeSum() {\n    var sum = 0;\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            sum += this[i][j];\n            this[i][j] = sum;\n        }\n    }\n    return this;\n};\n\n/**\n * Computes the dot (scalar) product between the matrix and another\n * @param {Matrix} other vector\n * @returns {number}\n */\nMatrix.prototype.dot = function dot(other) {\n    if (this.size !== other.size)\n        throw new MatrixError('vectors do not have the same size');\n    var vector1 = this.to1DArray();\n    var vector2 = other.to1DArray();\n    var dot = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        dot += vector1[i] * vector2[i];\n    }\n    return dot;\n};\n\n/**\n * Returns the matrix product between this and other\n * @returns {Matrix}\n */\nMatrix.prototype.mmul = function mmul(other) {\n    if (this.columns !== other.rows)\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n\n    var m = this.rows, n = this.columns, p = other.columns;\n    var result = new Matrix(m, p);\n\n    var Bcolj = new Array(n);\n    var i, j, k;\n    for (j = 0; j < p; j++) {\n        for (k = 0; k < n; k++)\n            Bcolj[k] = other[k][j];\n\n        for (i = 0; i < m; i++) {\n            var Arowi = this[i];\n\n            var s = 0;\n            for (k = 0; k < n; k++)\n                s += Arowi[k] * Bcolj[k];\n\n            result[i][j] = s;\n        }\n    }\n    return result;\n};\n\n/**\n * Sorts the rows (in place)\n * @param {function} compareFunction - usual Array.prototype.sort comparison function\n * @returns {Matrix} this\n */\nMatrix.prototype.sortRows = function sortRows(compareFunction) {\n    for (var i = 0, ii = this.rows; i < ii; i++) {\n        this[i].sort(compareFunction);\n    }\n    return this;\n};\n\n/**\n * Sorts the columns (in place)\n * @param {function} compareFunction - usual Array.prototype.sort comparison function\n * @returns {Matrix} this\n */\nMatrix.prototype.sortColumns = function sortColumns(compareFunction) {\n    for (var i = 0, ii = this.columns; i < ii; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n};\n\n/**\n * Transposes the matrix and returns a new one containing the result\n * @returns {Matrix}\n */\nMatrix.prototype.transpose = function transpose() {\n    var result = new Matrix(this.columns, this.rows);\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[j][i] = this[i][j];\n        }\n    }\n    return result;\n};\n\n/**\n * Returns a subset of the matrix\n * @param {number} startRow - First row index\n * @param {number} endRow - Last row index\n * @param {number} startColumn - First column index\n * @param {number} endColumn - Last column index\n * @returns {Matrix}\n */\nMatrix.prototype.subMatrix = function subMatrix(startRow, endRow, startColumn, endColumn) {\n    if ((startRow > endRow) || (startColumn > endColumn) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns))\n        throw new MatrixError('Argument out of range');\n    var newMatrix = new Matrix(endRow - startRow + 1, endColumn - startColumn + 1);\n    for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n            newMatrix[i - startRow][j - startColumn] = this[i][j];\n        }\n    }\n    return newMatrix;\n};\n\n/**\n * Returns a subset of the matrix based on an array of row indices\n * @param {Array} indices - Array containing the row indices\n * @param {number} [startColumn = 0] - First column index\n * @param {number} [endColumn = this.columns-1] - Last column index\n * @returns {Matrix}\n */\nMatrix.prototype.subMatrixRow = function subMatrixRow(indices, startColumn, endColumn) {\n    if (typeof startColumn === 'undefined') {\n        startColumn = 0;\n        endColumn = this.columns - 1;\n    } else if (typeof endColumn === 'undefined') {\n        endColumn = this.columns - 1;\n    }\n    if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns))\n        throw new MatrixError('Argument out of range.');\n    var l = indices.length, rows = this.rows,\n        X = new Matrix(l, endColumn - startColumn + 1);\n    for (var i = 0; i < l; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n            if ((indices[i] < 0) || (indices[i] >= rows))\n                throw new MatrixError('Argument out of range.');\n            X[i][j - startColumn] = this[indices[i]][j];\n        }\n    }\n    return X;\n};\n\n/**\n * Returns a subset of the matrix based on an array of column indices\n * @param {Array} indices - Array containing the column indices\n * @param {number} [startRow = 0] - First row index\n * @param {number} [endRow = this.rows-1] - Last row index\n * @returns {Matrix}\n */\nMatrix.prototype.subMatrixColumn = function subMatrixColumn(indices, startRow, endRow) {\n    if (typeof startRow === 'undefined') {\n        startRow = 0;\n        endRow = this.rows - 1;\n    } else if (typeof endRow === 'undefined') {\n        endRow = this.rows - 1;\n    }\n    if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows))\n        throw new MatrixError('Argument out of range.');\n    var l = indices.length, columns = this.columns,\n        X = new Matrix(endRow - startRow + 1, l);\n    for (var i = 0; i < l; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n            if ((indices[i] < 0) || (indices[i] >= columns))\n                throw new MatrixError('Argument out of range.');\n            X[j - startRow][i] = this[j][indices[i]];\n        }\n    }\n    return X;\n};\n\n/**\n * Returns the trace of the matrix (sum of the diagonal elements)\n * @returns {number}\n */\nMatrix.prototype.trace = function trace() {\n    if (!this.isSquare())\n        throw new MatrixError('The matrix is not square');\n    var trace = 0, i = 0, l = this.rows;\n    for (; i < l; i++) {\n        trace += this[i][i];\n    }\n    return trace;\n};\n\n/**\n * Sets each element of the matrix to its absolute value\n * @returns {Matrix} this\n */\nMatrix.prototype.abs = function abs() {\n    var ii = this.rows, jj = this.columns;\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            this[i][j] = Math.abs(this[i][j]);\n        }\n    }\n};\n\nMatrix.MatrixError = MatrixError;\n\nmodule.exports = Matrix;\n},{}],59:[function(require,module,exports){\n'use strict';\n\nvar Kind = require('./kind');\n\nfunction Atom(type, residue, coordinates) {\n    this.type = type;\n    this.residue = residue;\n    this.kind = Kind.lookup(type, residue);\n    this.coordinates = coordinates;\n}\n\nmodule.exports = Atom;\n\n},{\"./kind\":61}],60:[function(require,module,exports){\n'use strict';\n\nvar Matrix = require('ml-matrix');\nvar euclidean = require('ml-distance').euclidean;\n\nfunction getFingerprint(atoms) {\n    //console.log('ATOMS');\n    //console.log(atoms.length);\n    //console.log('BEFORE');\n    //console.log(atoms[1].coordinates);\n    normalizeCoordinates(atoms);\n    //console.log('AFTER NORM');\n    //console.log(atoms[1].normCoordinates);\n    var eigenVectors = getEigenvectors(atoms);\n    rotateCoordinates(atoms, eigenVectors);\n    var nPMI = getPMI(atoms);\n    var grid = getGrid(atoms);\n    var result = getHistograms(grid);\n    var avgTogc = getDensity(grid);\n\n    var finalFP = result[0].normalized.concat(\n        result[1].normalized,\n        result[2].normalized,\n        result[3].normalized\n    );\n    for (var i = 0; i < finalFP.length; i++) {\n        finalFP[i] = (finalFP[i] * 100) | 0;\n    }\n\n    var finalResult = finalFP.concat(\n        result[0].atomCount,\n        result[1].atomCount,\n        result[2].atomCount,\n        result[3].atomCount,\n        nPMI,\n        avgTogc\n    );\n\n    return finalResult;\n}\n\nmodule.exports = getFingerprint;\n\n/**\n * Normalize coordinates by dividing by the sum\n * @param atoms\n */\nfunction normalizeCoordinates(atoms) {\n    var i;\n    var l = atoms.length;\n    var sum = [0, 0, 0];\n\n    for (i = 0; i < l; i++) {\n        sum[0] += atoms[i].coordinates[0];\n        sum[1] += atoms[i].coordinates[1];\n        sum[2] += atoms[i].coordinates[2];\n    }\n\n    sum[0] /= l;\n    sum[1] /= l;\n    sum[2] /= l;\n\n    for (i = 0; i < l; i++) {\n        var atom = atoms[i];\n        atom.normCoordinates = [\n            atom.coordinates[0] - sum[0],\n            atom.coordinates[1] - sum[1],\n            atom.coordinates[2] - sum[2]\n        ]\n    }\n}\n\n/**\n * We need to calculate the covariance matrix and get its eigenvectors to rotate\n * the points\n * @param atoms\n */\nfunction getEigenvectors(atoms) {\n    var i, j, k;\n    var l = atoms.length;\n    var sum = Matrix.zeros(3, 3);\n\n    for (i = 0; i < l; i++) {\n        var normCoords = atoms[i].normCoordinates;\n        for (j = 0; j < 3; j++) {\n            sum[j][j] += normCoords[j] * normCoords[j];\n            for (k = j + 1; k < 3; k++) {\n                var val = normCoords[j] * normCoords[k];\n                sum[j][k] += val;\n                sum[k][j] += val;\n            }\n        }\n    }\n\n    // Calculate covariance matrix\n    var cov = Matrix.zeros(3, 3);\n    for (i = 0; i < 3; i++) {\n        for (j = 0; j < 3; j++) {\n            cov[i][j] = sum[i][j] / (l - 1);\n        }\n    }\n\n    //console.log('COV matrix');\n    //console.log(cov[0]);\n\n    // Eigenvalue decomposition\n    var evd = Matrix.DC.EVD(cov);\n\n    var eigenVectors = evd.eigenvectorMatrix;\n    var eigenValues = evd.realEigenvalues;\n\n    // switch column to row\n    for (i = 0; i < 3; i++) {\n        for (j = i+1; j < 3; j++) {\n            var tmp = 0;\n            tmp = eigenVectors[i][j];\n            eigenVectors[i][j] = eigenVectors[j][i];\n            eigenVectors[j][i] = tmp;\n        }\n    }\n\n    // If a vector is fully negative, we need to invert the values\n    for (i = 0; i < 3; i++) {\n        var negative = true;\n        for (j = 0; j < 3; j++) {\n            if (eigenVectors[i][j] >= 0) {\n                negative = false;\n                break;\n            }\n        }\n        if (negative) {\n            for (j = 0; j < 3; j++) {\n                eigenVectors[i][j] *= -1;\n            }\n        }\n    }\n\n    // Sort the eigenvalues in decreasing order and eigenvectors with them\n    var combined = new Array(3);\n    for (i = 0; i < 3; i++) {\n        combined[i] = {\n            value: eigenValues[i],\n            vector: eigenVectors[i]\n        }\n    }\n    combined.sort(function (a, b) {\n        return b.value - a.value;\n    });\n    for (i = 0; i < 3; i++) {\n        eigenValues[i] = combined[i].value;\n        eigenVectors[i] = combined[i].vector\n    }\n\n    //console.log('EIGENVALUES');\n    //console.log(eigenValues);\n\n    //console.log('EIGENVECTOR');\n    //console.log(eigenVectors[0][0] + \" \" + eigenVectors[0][1] + \" \" + eigenVectors[0][2]);\n    //console.log(eigenVectors[1][0] + \" \" + eigenVectors[1][1] + \" \" + eigenVectors[1][2]);\n    //console.log(eigenVectors[2][0] + \" \" + eigenVectors[2][1] + \" \" + eigenVectors[2][2]);\n\n    return eigenVectors;\n}\n\nfunction rotateCoordinates(atoms, eigenVectors) {\n    var i, j, k;\n    var l = atoms.length;\n\n    for (i = 0; i < l; i++) {\n        var atom = atoms[i];\n        var normCoord = atom.normCoordinates;\n        var newCoord = new Array(3);\n        atom.newCoordinates = newCoord;\n        for (j = 0; j < 3; j++) {\n            newCoord[j] = 0;\n            for (k = 0; k < 3; k++) {\n                newCoord[j] += normCoord[k] * eigenVectors[j][k];\n            }\n        }\n    }\n\n    //console.log('TRANSPOSE');\n    //console.log(atoms[0].newCoordinates);\n}\n\n/**\n * Returns the min and max values for each axis\n * @param atoms\n */\nfunction getMaxima(atoms) {\n    var result = {\n        x: [Infinity, -Infinity],\n        y: [Infinity, -Infinity],\n        z: [Infinity, -Infinity]\n    };\n    for (var i = 0; i < atoms.length; i++) {\n        var atomCoord = atoms[i].newCoordinates;\n        if (result.x[0] > atomCoord[0]) {\n            result.x[0] = atomCoord[0];\n        }\n        if (result.x[1] < atomCoord[0]) {\n            result.x[1] = atomCoord[0];\n        }\n        if (result.y[0] > atomCoord[1]) {\n            result.y[0] = atomCoord[1];\n        }\n        if (result.y[1] < atomCoord[1]) {\n            result.y[1] = atomCoord[1];\n        }\n        if (result.z[0] > atomCoord[2]) {\n            result.z[0] = atomCoord[2];\n        }\n        if (result.z[1] < atomCoord[2]) {\n            result.z[1] = atomCoord[2];\n        }\n    }\n\n    result.x[0] -= 0.5;\n    result.x[1] += 0.5;\n    result.y[0] -= 0.5;\n    result.y[1] += 0.5;\n    result.z[0] -= 0.5;\n    result.z[1] += 0.5;\n\n    return result;\n}\n\nfunction getGrid(atoms) {\n    var maxima = getMaxima(atoms);\n\n    var gridSize = 13;\n    var gridSizeXYZ = [\n        Math.abs(maxima.x[0]) + Math.abs(maxima.x[1]),\n        Math.abs(maxima.y[0]) + Math.abs(maxima.y[1]),\n        Math.abs(maxima.z[0]) + Math.abs(maxima.z[1])\n    ];\n    var gridSpacingXYZ = [\n        gridSizeXYZ[0] / (gridSize - 1),\n        gridSizeXYZ[1] / (gridSize - 1),\n        gridSizeXYZ[2] / (gridSize - 1)\n    ];\n    var gridX = new Array(gridSize);\n    var gridY = new Array(gridSize);\n    var gridZ = new Array(gridSize);\n\n    var centerIndex = (gridSize - 1) / 2;\n\n    /*\n     Geometric center of the dataset\n     */\n    var i, j, k;\n    var l = atoms.length;\n\n    var cog = [0, 0, 0];\n    for (i = 0; i < l; i++) {\n        var atomCoord = atoms[i].newCoordinates;\n        cog[0] += atomCoord[0];\n        cog[1] += atomCoord[1];\n        cog[2] += atomCoord[2];\n    }\n\n    cog[0] /= l;\n    cog[1] /= l;\n    cog[2] /= l;\n\n    gridX[centerIndex] = cog[0];\n    gridY[centerIndex] = cog[1];\n    gridZ[centerIndex] = cog[2];\n\n    for (i = centerIndex + 1; i < gridSize; i++) {\n        gridX[i] = gridX[i - 1] + gridSpacingXYZ[0];\n        gridY[i] = gridY[i - 1] + gridSpacingXYZ[1];\n        gridZ[i] = gridZ[i - 1] + gridSpacingXYZ[2];\n    }\n\n    for (i = centerIndex - 1; i >= 0; i--) {\n        gridX[i] = gridX[i + 1] - gridSpacingXYZ[0];\n        gridY[i] = gridY[i + 1] - gridSpacingXYZ[1];\n        gridZ[i] = gridZ[i + 1] - gridSpacingXYZ[2];\n    }\n\n    var nBoxes = gridSize * gridSize * gridSize;\n    var grid = new Array(nBoxes);\n    for (i = 0; i < gridSize; i++) {\n        for (j = 0; j < gridSize; j++) {\n            for (k = 0; k < gridSize; k++) {\n                grid[getIndexFrom3d(i, j, k, gridSize)] = new GridBox(i, j, k);\n            }\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var position = getAtomGridPosition(atoms[i].newCoordinates);\n        atoms[i].gridPosition = position;\n        grid[getIndexFrom3d(position[0], position[1], position[2], gridSize)].atoms.push(atoms[i]);\n    }\n\n    return grid;\n\n    function getAtomGridPosition(atomXYZ) {\n        return [\n            Math.floor((atomXYZ[0] - maxima.x[0]) / gridSpacingXYZ[0]),\n            Math.floor((atomXYZ[1] - maxima.y[0]) / gridSpacingXYZ[1]),\n            Math.floor((atomXYZ[2] - maxima.z[0]) / gridSpacingXYZ[2])\n        ];\n    }\n}\n\nfunction getIndexFrom3d(x, y, z, size) {\n    return x + size * y + size * size * z;\n}\n\nfunction GridBox(x, y, z) {\n    this.xGrid = x;\n    this.yGrid = y;\n    this.zGrid = z;\n    this.coordinates = [\n        new Array(3), //all\n        new Array(3), //pos\n        new Array(3), //neg\n        new Array(3) //hyd\n    ];\n    this.prop = [0, 0, 0, 0];\n    this.atoms = [];\n}\n\nfunction getHistograms(grid) {\n    var result = [\n        new Result(), // all\n        new Result(), // pos\n        new Result(), // neg\n        new Result()  // hyd\n    ];\n\n    var i, j;\n    var box, sum, sumPos, sumNeg, sumHyd, atomL, atom;\n    var l = grid.length;\n\n    for (i = 0; i < l; i++) {\n        box = grid[i];\n        if (box.atoms.length) {\n            sum = [\n                [0, 0, 0], //all\n                [0, 0, 0], //pos\n                [0, 0, 0], //neg\n                [0, 0, 0] //hyd\n            ];\n\n            atomL = box.atoms.length;\n            for (j = 0; j < atomL; j++) {\n                atom = box.atoms[j];\n                sum[0][0] += atom.newCoordinates[0];\n                sum[0][1] += atom.newCoordinates[1];\n                sum[0][2] += atom.newCoordinates[2];\n                box.prop[0]++;\n                result[0].atomCount++;\n                if (atom.kind > 0) {\n                    box.prop[atom.kind]++;\n                    result[atom.kind].atomCount++;\n                    sum[atom.kind][0] += atom.newCoordinates[0];\n                    sum[atom.kind][1] += atom.newCoordinates[1];\n                    sum[atom.kind][2] += atom.newCoordinates[2];\n                }\n            }\n\n            for (var k = 0; k < 4; k++) {\n                box.coordinates[k][0] = sum[k][0] / box.prop[k];\n                box.coordinates[k][1] = sum[k][1] / box.prop[k];\n                box.coordinates[k][2] = sum[k][2] / box.prop[k];\n            }\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        box = grid[i];\n        if (box.atoms.length === 0) continue;\n        for (j = i + 1; j < l; j++) {\n            var otherBox = grid[j];\n            if (otherBox.atoms.length === 0) continue;\n\n            for (var k = 0; k < 4; k++) {\n                if (box.prop[k] > 0 && otherBox.prop[k] > 0) {\n                    var distance;\n                    distance = euclidean(box.coordinates[k], otherBox.coordinates[k]);\n                    result[k].distances.push(distance);\n                    result[k].weights.push(box.prop[k] * otherBox.prop[k]);\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < 4; i++) {\n        var data = result[i];\n        data.frequency = getHistogram(data.distances, data.weights);\n        data.normalized = setWeights(normalize(data.frequency, data.atomCount), i);\n\n    }\n    return result;\n}\n\nvar factors = [1, 5, 5, 2];\nfunction setWeights(array, type) {\n    var factor = factors[type];\n    if (factor === 1) return array;\n    for (var i = 0; i < array.length; i++) {\n        array[i] *= factor;\n    }\n    return array;\n}\n\nfunction normalize(frequency, val) {\n    var result = new Array(frequency.length);\n    for (var a = 0; a < result.length; a++) {\n        if (frequency[a] > 0) {\n            result[a] = frequency[a] / Math.pow(val, 1.5);\n        }\n    }\n    return result;\n}\n\nfunction getHistogram(data, weight) {\n    var minValue = 0;\n    var maxValue = 400;\n    var binset = getBitSet();\n    var l = binset.length;\n\n    var frequency = new Array(l);\n    for (var i = 0; i < l; frequency[i++] = 0);\n\n    for (var a = 0; a < data.length; a++) {\n        var val = data[a];\n        if (val < minValue) continue;\n        if (val > maxValue) continue;\n\n        for (var i = 0; i < l; i++) {\n            frequency[i] += weight[a] * Math.exp(-((binset[i]-val)*(binset[i]-val)) / (2*(val*0.09)*(val*0.09)));\n\n        }\n    }\n    return frequency;\n}\n\nfunction getBitSet() {\n    var result = new Array(34);\n    var number = 1.45;\n    result[0] = number;\n    for (var i = 1; i < 34; i++) {\n        number *= 1.18;\n        result[i] = number;\n    }\n    return result;\n}\n\nfunction Result() {\n    this.atomCount = 0;\n    this.distances = [];\n    this.weights = [];\n}\n\n/*\n calculate nPMI\n */\nfunction getPMI(atoms) {\n    var l = atoms.length;\n    var array = [0, 0, 0];\n    var sorted = [0, 0, 0];\n    var used = new Array;\n    var nPMI;\n\n    if (l == 1) {\n        sorted = [1, 1, 1];\n    }\n\n    var a = 0;\n    for (var i = 0; i < 3; i++) {\n        for (var j = (i+1); j < 3; j++) {\n            for (var k = 0; k < l; k++) {\n                var atom = atoms[k];\n                var coordinates = atom.newCoordinates;\n                var atommass = getMass(atom.type);\n                var Xsq = coordinates[i] * coordinates[i];\n                var Ysq = coordinates[j] * coordinates[j];\n                var rsq = Xsq + Ysq;\n                array[a] += atommass * rsq;\n            }\n            a++;\n        }\n    }\n\n    var s = 0;\n    while (s < sorted.length) {\n        var lowest = Infinity;\n        var pos = -1;\n        for (var i = 0; i < array.length; i++) {\n            var found = false;\n            for (var j = 0; j < used.length; j++) {\n                if (used[j] == i) {\n                    found = true;\n                    break;\n                }\n            }\n            if (found == true) continue;\n            if (array[i] < lowest) {\n                lowest = array[i];\n                pos = i;\n            }\n        }\n        used.push(pos);\n        sorted[s] = lowest;\n        s++;\n    }\n    nPMI = getNormalizedPMI(sorted);\n    return nPMI;\n}\n\nfunction getNormalizedPMI(PMI) {\n    var nPMI = [PMI[0] / PMI[2], PMI[1] / PMI[2]];\n    return nPMI;\n}\n\nfunction getMass(type) {\n    var atomsets = [\"C\",\"N\",\"O\",\"S\",\"P\"];\n    var atommass = [12.0, 14.0, 16.0, 32.0, 15.0];\n    var atomtyp = type.substring(0,1);\n    var mass;\n    for (var a = 0; a < atomsets.length; a++) {\n        if (atomtyp == atomsets[a]) {\n            mass=atommass[a];\n            break;\n        }\n    }\n    return mass;\n}\n\n/*\n density calculation: average distance to the geometry center of the molecule\n */\nfunction getDensity(grids) {\n    var avgTogc = 0;\n    var gc = [0, 0, 0];\n    var size = 0;\n    for (var i = 0; i < grids.length; i++) {\n        var hac = grids[i].atoms.length;\n        if (hac == 0) {\n            continue;\n        }\n        gc[0] += grids[i].coordinates[0][0]*hac;\n        gc[1] += grids[i].coordinates[0][1]*hac;\n        gc[2] += grids[i].coordinates[0][2]*hac;\n        size += hac;\n\n    }\n    for (var i = 0; i < 3; i++) {\n        gc[i] = gc[i] / size;\n    }\n    for (var i = 0; i < grids.length; i++) {\n        var hac = grids[i].atoms.length;\n        if (hac == 0) {\n            continue;\n        }\n        var dist = euclidean(grids[i].coordinates[0], gc);\n        avgTogc += dist * grids[i].atoms.length;\n    }\n\n    avgTogc = avgTogc / size;\n    return avgTogc;\n}\n},{\"ml-distance\":55,\"ml-matrix\":57}],61:[function(require,module,exports){\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar ALL = 0;\nvar POSITIVE = 1;\nvar NEGATIVE = 2;\nvar HYDROPHOBIC = 3;\n\nvar kinds = {\n    positive: POSITIVE,\n    negative: NEGATIVE,\n    hydrophobic: HYDROPHOBIC\n};\n\nvar kindsData = {};\nkindsData.positive = 'CE LYS\\nCZ ARG';\nkindsData.negative = 'CG ASP\\nCD GLU\\nOP1';\nkindsData.hydrophobic = 'CB ALA\\nCG2 THR\\nCB VAL\\nCG1 VAL\\nCG2 VAL\\nCB LEU\\nCG LEU\\nCD1 LEU\\nCD2 LEU\\nCB ILE\\nCG1 ILE\\nCG2 ILE\\nCD1 ILE\\nCB MET\\nCB PRO\\nCG PRO\\nCB PHE\\nCD1 PHE\\nCD2 PHE\\nCG PHE\\nCE1 PHE\\nCE2 PHE\\nCZ PHE\\nCB TYR\\nCG TYR\\nCD1 TYR\\nCD2 TYR\\nCE1 TYR\\nCE2 TYR\\nCB TRP\\nCG TRP\\nCD2 TRP\\nCE3 TRP\\nCZ2 TRP\\nCZ3 TRP\\nCH2 TRP\\nCB ASP\\nCB GLU\\nCG GLU\\nCB ASN\\nCB GLN\\nCG GLN\\nCB HIS\\nCB LYS\\nCG LYS\\nCD LYS\\nCB ARG\\nCG ARG\\nC5 U\\nC7 U\\nC2\\' U\\nC5 T\\nC7 T\\nC2\\' T\\nC2\\' A\\nC2\\' C\\nC5 C\\nC2\\' G\\nC5 DT\\nC7 DT\\nC2\\' DT\\nC2\\' DA\\nC2\\' DC\\nC5 DC\\nC2\\' DG';\n\nvar table = {};\n\nfor (var i in kinds) {\n    var kind = kinds[i];\n    var data = kindsData[i];\n    var lines = data.split(/[\\r\\n]+/);\n    for (var j = 0; j < lines.length; j++) {\n        var line = lines[j].split(' ');\n        var type = line[0];\n        if (!table[type]) {\n            table[type] = {};\n        }\n        if (line[1]) {\n            table[type][line[1]] = kind;\n        } else {\n            table[type] = kind;\n        }\n    }\n}\n\nfunction lookup(type, residue) {\n    var lookType = table[type];\n    if (lookType === undefined) {\n        return ALL;\n    }\n    if (typeof lookType === 'number') {\n        return lookType;\n    }\n    var lookResidue = lookType[residue];\n    if (lookResidue === undefined) {\n        return ALL;\n    }\n    return lookResidue;\n}\n\nexports.lookup = lookup;\n\n},{\"fs\":2,\"path\":3}],62:[function(require,module,exports){\n'use strict';\n\nvar Atom = require('./atom');\n\nfunction parse(pdb) {\n    var lines = pdb.split(/[\\r\\n]+/);\n\n    var result = {\n        atoms: []\n    };\n\n    var eleset = [\"C\", \"N\", \"O\", \"S\", \"P\"];\n\n    var pass = true;\n    var hetatm = 0;\n    var atm = 0;\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        var header = line.substring(0, 6);\n        if (header === 'HETATM') {\n            hetatm++;\n        } else if (header === 'ATOM  ') {\n            atm++;\n        }\n    }\n    //if HETATM is more than 20% of total atoms, remove this pdb.\n    var hetperc = hetatm / (hetatm + atm);\n    if (hetperc > 0.2) {\n        pass = false;\n    }\n\n    if (!pass) {\n        result.experiment = \"ELSE\";\n        result.idCode = \"null\";\n        result.atoms = \"null\";\n    } else {\n        var allocCODE = new Array();\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var header = line.substring(0, 6);\n            if (header === 'HEADER') {\n                result.idCode = line.substring(62, 66);\n            } else if (header === 'EXPDTA') {\n                result.experiment = line.substring(10);\n            } else if (header === 'ATOM  ') {\n                //remove hydrogens\n                var element = line.substring(76, 78).trim();\n                var natele = false;\n                for (var j = 0; j < eleset.length; j++) {\n                    if (element === eleset[j]) {\n                        natele = true;\n                        break;\n                    }\n                }\n\n                //remove alternative position\n                var alloc = line.substring(16, 17).trim();\n                var ins = false;\n                if (alloc.length > 0) {\n                    if (allocCODE.length == 0) {\n                        ins = true;\n                        allocCODE.push(alloc);\n                    } else {\n                        if (alloc == allocCODE[0]) {\n                            ins = true;\n                        }\n                    }\n                } else {\n                    ins = true;\n                }\n\n                if (natele && ins) {\n                    result.atoms.push(new Atom(\n                        line.substring(12, 16).trim(), // type\n                        line.substring(17, 20).trim(), // residue\n                        [parseFloat(line.substring(30, 38)), parseFloat(line.substring(38, 46)), parseFloat(line.substring(46, 54))] // coordinates\n                    ));\n                }\n            }\n        }\n    }\n    return result;\n}\n\nmodule.exports = parse;\n},{\"./atom\":59}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}